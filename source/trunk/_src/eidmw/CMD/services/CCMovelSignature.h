// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* CCMovelSignature.h
   Generated by wsdl2h 2.8.30 from https://dev.cmd.autenticacao.gov.pt/Ama.Authentication.Service/CCMovelSignature.svc?wsdl and typemap.dat
   2017-03-29 14:02:25 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on CCMovelSignature.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stl.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "stl.h"	// enable STL containers when used (option -s removes STL dependency)

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tempuri = "http://tempuri.org/"
ns1 = "http://Ama.Authentication.Service/Imports"
ns2 = "http://Ama.Authentication.Service/"
ns3 = "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://Ama.Authentication.Service/Imports"
//gsoap ns1   schema namespace:	http://Ama.Authentication.Service/Imports
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://Ama.Authentication.Service/"
//gsoap ns2   schema namespace:	http://Ama.Authentication.Service/
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"
//gsoap ns3   schema namespace:	http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
	struct soap *soap;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class _ns2__CCMovelSign.
class _ns2__CCMovelSign;

//  Forward declaration of class _ns2__CCMovelSignResponse.
class _ns2__CCMovelSignResponse;

//  Forward declaration of class _ns2__CCMovelValidateSignature.
class _ns2__CCMovelValidateSignature;

//  Forward declaration of class _ns2__CCMovelValidateSignatureResponse.
class _ns2__CCMovelValidateSignatureResponse;

//  Forward declaration of class _ns2__GetCertificate.
class _ns2__GetCertificate;

//  Forward declaration of class _ns2__GetCertificateResponse.
class _ns2__GetCertificateResponse;

//  Forward declaration of class _ns2__ValidateOtp.
class _ns2__ValidateOtp;

//  Forward declaration of class _ns2__ValidateOtpResponse.
class _ns2__ValidateOtpResponse;

//  Forward declaration of class ns3__SignRequest.
class ns3__SignRequest;

//  Forward declaration of class ns3__SignStatus.
class ns3__SignStatus;

//  Forward declaration of class ns3__ValidationRequest.
class ns3__ValidationRequest;

//  Forward declaration of class ns3__ValidationResponse.
class ns3__ValidationResponse;

//  Forward declaration of class ns3__SignResponse.
class ns3__SignResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelSign
/// @brief "http://Ama.Authentication.Service/":CCMovelSign is a complexType.
///
/// class _ns2__CCMovelSign operations:
/// - _ns2__CCMovelSign* soap_new__ns2__CCMovelSign(soap*) allocate
/// - _ns2__CCMovelSign* soap_new__ns2__CCMovelSign(soap*, int num) allocate array
/// - _ns2__CCMovelSign* soap_new_req__ns2__CCMovelSign(soap*, ...) allocate, set required members
/// - _ns2__CCMovelSign* soap_new_set__ns2__CCMovelSign(soap*, ...) allocate, set all public members
/// - _ns2__CCMovelSign::soap_default(soap*) reset members to default
/// - int soap_read__ns2__CCMovelSign(soap*, _ns2__CCMovelSign*) deserialize from a stream
/// - int soap_write__ns2__CCMovelSign(soap*, _ns2__CCMovelSign*) serialize to a stream
/// - _ns2__CCMovelSign* _ns2__CCMovelSign::soap_dup(soap*) returns deep copy of _ns2__CCMovelSign, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__CCMovelSign::soap_del() deep deletes _ns2__CCMovelSign data members, use only after _ns2__CCMovelSign::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__CCMovelSign
{ public:
/// Element "request" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest.
    ns3__SignRequest*                    request                        0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelSignResponse
/// @brief "http://Ama.Authentication.Service/":CCMovelSignResponse is a complexType.
///
/// class _ns2__CCMovelSignResponse operations:
/// - _ns2__CCMovelSignResponse* soap_new__ns2__CCMovelSignResponse(soap*) allocate
/// - _ns2__CCMovelSignResponse* soap_new__ns2__CCMovelSignResponse(soap*, int num) allocate array
/// - _ns2__CCMovelSignResponse* soap_new_req__ns2__CCMovelSignResponse(soap*, ...) allocate, set required members
/// - _ns2__CCMovelSignResponse* soap_new_set__ns2__CCMovelSignResponse(soap*, ...) allocate, set all public members
/// - _ns2__CCMovelSignResponse::soap_default(soap*) reset members to default
/// - int soap_read__ns2__CCMovelSignResponse(soap*, _ns2__CCMovelSignResponse*) deserialize from a stream
/// - int soap_write__ns2__CCMovelSignResponse(soap*, _ns2__CCMovelSignResponse*) serialize to a stream
/// - _ns2__CCMovelSignResponse* _ns2__CCMovelSignResponse::soap_dup(soap*) returns deep copy of _ns2__CCMovelSignResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__CCMovelSignResponse::soap_del() deep deletes _ns2__CCMovelSignResponse data members, use only after _ns2__CCMovelSignResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__CCMovelSignResponse
{ public:
/// Element "CCMovelSignResult" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns3__SignStatus*                     CCMovelSignResult              0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelValidateSignature
/// @brief "http://Ama.Authentication.Service/":CCMovelValidateSignature is a complexType.
///
/// class _ns2__CCMovelValidateSignature operations:
/// - _ns2__CCMovelValidateSignature* soap_new__ns2__CCMovelValidateSignature(soap*) allocate
/// - _ns2__CCMovelValidateSignature* soap_new__ns2__CCMovelValidateSignature(soap*, int num) allocate array
/// - _ns2__CCMovelValidateSignature* soap_new_req__ns2__CCMovelValidateSignature(soap*, ...) allocate, set required members
/// - _ns2__CCMovelValidateSignature* soap_new_set__ns2__CCMovelValidateSignature(soap*, ...) allocate, set all public members
/// - _ns2__CCMovelValidateSignature::soap_default(soap*) reset members to default
/// - int soap_read__ns2__CCMovelValidateSignature(soap*, _ns2__CCMovelValidateSignature*) deserialize from a stream
/// - int soap_write__ns2__CCMovelValidateSignature(soap*, _ns2__CCMovelValidateSignature*) serialize to a stream
/// - _ns2__CCMovelValidateSignature* _ns2__CCMovelValidateSignature::soap_dup(soap*) returns deep copy of _ns2__CCMovelValidateSignature, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__CCMovelValidateSignature::soap_del() deep deletes _ns2__CCMovelValidateSignature data members, use only after _ns2__CCMovelValidateSignature::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__CCMovelValidateSignature
{ public:
/// Element "request" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationRequest.
    ns3__ValidationRequest*              request                        0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":CCMovelValidateSignatureResponse
/// @brief "http://Ama.Authentication.Service/":CCMovelValidateSignatureResponse is a complexType.
///
/// class _ns2__CCMovelValidateSignatureResponse operations:
/// - _ns2__CCMovelValidateSignatureResponse* soap_new__ns2__CCMovelValidateSignatureResponse(soap*) allocate
/// - _ns2__CCMovelValidateSignatureResponse* soap_new__ns2__CCMovelValidateSignatureResponse(soap*, int num) allocate array
/// - _ns2__CCMovelValidateSignatureResponse* soap_new_req__ns2__CCMovelValidateSignatureResponse(soap*, ...) allocate, set required members
/// - _ns2__CCMovelValidateSignatureResponse* soap_new_set__ns2__CCMovelValidateSignatureResponse(soap*, ...) allocate, set all public members
/// - _ns2__CCMovelValidateSignatureResponse::soap_default(soap*) reset members to default
/// - int soap_read__ns2__CCMovelValidateSignatureResponse(soap*, _ns2__CCMovelValidateSignatureResponse*) deserialize from a stream
/// - int soap_write__ns2__CCMovelValidateSignatureResponse(soap*, _ns2__CCMovelValidateSignatureResponse*) serialize to a stream
/// - _ns2__CCMovelValidateSignatureResponse* _ns2__CCMovelValidateSignatureResponse::soap_dup(soap*) returns deep copy of _ns2__CCMovelValidateSignatureResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__CCMovelValidateSignatureResponse::soap_del() deep deletes _ns2__CCMovelValidateSignatureResponse data members, use only after _ns2__CCMovelValidateSignatureResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__CCMovelValidateSignatureResponse
{ public:
/// Element "CCMovelValidateSignatureResult" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationResponse.
    ns3__ValidationResponse*             CCMovelValidateSignatureResult 0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificate
/// @brief "http://Ama.Authentication.Service/":GetCertificate is a complexType.
///
/// class _ns2__GetCertificate operations:
/// - _ns2__GetCertificate* soap_new__ns2__GetCertificate(soap*) allocate
/// - _ns2__GetCertificate* soap_new__ns2__GetCertificate(soap*, int num) allocate array
/// - _ns2__GetCertificate* soap_new_req__ns2__GetCertificate(soap*, ...) allocate, set required members
/// - _ns2__GetCertificate* soap_new_set__ns2__GetCertificate(soap*, ...) allocate, set all public members
/// - _ns2__GetCertificate::soap_default(soap*) reset members to default
/// - int soap_read__ns2__GetCertificate(soap*, _ns2__GetCertificate*) deserialize from a stream
/// - int soap_write__ns2__GetCertificate(soap*, _ns2__GetCertificate*) serialize to a stream
/// - _ns2__GetCertificate* _ns2__GetCertificate::soap_dup(soap*) returns deep copy of _ns2__GetCertificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__GetCertificate::soap_del() deep deletes _ns2__GetCertificate data members, use only after _ns2__GetCertificate::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__GetCertificate
{ public:
/// Element "applicationId" of XSD type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// Element "userId" of XSD type xs:string.
    std::string*                         userId                         0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":GetCertificateResponse
/// @brief "http://Ama.Authentication.Service/":GetCertificateResponse is a complexType.
///
/// class _ns2__GetCertificateResponse operations:
/// - _ns2__GetCertificateResponse* soap_new__ns2__GetCertificateResponse(soap*) allocate
/// - _ns2__GetCertificateResponse* soap_new__ns2__GetCertificateResponse(soap*, int num) allocate array
/// - _ns2__GetCertificateResponse* soap_new_req__ns2__GetCertificateResponse(soap*, ...) allocate, set required members
/// - _ns2__GetCertificateResponse* soap_new_set__ns2__GetCertificateResponse(soap*, ...) allocate, set all public members
/// - _ns2__GetCertificateResponse::soap_default(soap*) reset members to default
/// - int soap_read__ns2__GetCertificateResponse(soap*, _ns2__GetCertificateResponse*) deserialize from a stream
/// - int soap_write__ns2__GetCertificateResponse(soap*, _ns2__GetCertificateResponse*) serialize to a stream
/// - _ns2__GetCertificateResponse* _ns2__GetCertificateResponse::soap_dup(soap*) returns deep copy of _ns2__GetCertificateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__GetCertificateResponse::soap_del() deep deletes _ns2__GetCertificateResponse data members, use only after _ns2__GetCertificateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__GetCertificateResponse
{ public:
/// Element "GetCertificateResult" of XSD type xs:string.
    std::string*                         GetCertificateResult           0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ValidateOtp
/// @brief "http://Ama.Authentication.Service/":ValidateOtp is a complexType.
///
/// class _ns2__ValidateOtp operations:
/// - _ns2__ValidateOtp* soap_new__ns2__ValidateOtp(soap*) allocate
/// - _ns2__ValidateOtp* soap_new__ns2__ValidateOtp(soap*, int num) allocate array
/// - _ns2__ValidateOtp* soap_new_req__ns2__ValidateOtp(soap*, ...) allocate, set required members
/// - _ns2__ValidateOtp* soap_new_set__ns2__ValidateOtp(soap*, ...) allocate, set all public members
/// - _ns2__ValidateOtp::soap_default(soap*) reset members to default
/// - int soap_read__ns2__ValidateOtp(soap*, _ns2__ValidateOtp*) deserialize from a stream
/// - int soap_write__ns2__ValidateOtp(soap*, _ns2__ValidateOtp*) serialize to a stream
/// - _ns2__ValidateOtp* _ns2__ValidateOtp::soap_dup(soap*) returns deep copy of _ns2__ValidateOtp, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__ValidateOtp::soap_del() deep deletes _ns2__ValidateOtp data members, use only after _ns2__ValidateOtp::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__ValidateOtp
{ public:
/// Element "code" of XSD type xs:string.
    std::string*                         code                           0;	///< Optional element.
/// Element "processId" of XSD type xs:string.
    std::string*                         processId                      0;	///< Optional element.
/// Element "applicationId" of XSD type xs:base64Binary.
    xsd__base64Binary*                   applicationId                  0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://Ama.Authentication.Service/":ValidateOtpResponse
/// @brief "http://Ama.Authentication.Service/":ValidateOtpResponse is a complexType.
///
/// class _ns2__ValidateOtpResponse operations:
/// - _ns2__ValidateOtpResponse* soap_new__ns2__ValidateOtpResponse(soap*) allocate
/// - _ns2__ValidateOtpResponse* soap_new__ns2__ValidateOtpResponse(soap*, int num) allocate array
/// - _ns2__ValidateOtpResponse* soap_new_req__ns2__ValidateOtpResponse(soap*, ...) allocate, set required members
/// - _ns2__ValidateOtpResponse* soap_new_set__ns2__ValidateOtpResponse(soap*, ...) allocate, set all public members
/// - _ns2__ValidateOtpResponse::soap_default(soap*) reset members to default
/// - int soap_read__ns2__ValidateOtpResponse(soap*, _ns2__ValidateOtpResponse*) deserialize from a stream
/// - int soap_write__ns2__ValidateOtpResponse(soap*, _ns2__ValidateOtpResponse*) serialize to a stream
/// - _ns2__ValidateOtpResponse* _ns2__ValidateOtpResponse::soap_dup(soap*) returns deep copy of _ns2__ValidateOtpResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns2__ValidateOtpResponse::soap_del() deep deletes _ns2__ValidateOtpResponse data members, use only after _ns2__ValidateOtpResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class _ns2__ValidateOtpResponse
{ public:
/// Element "ValidateOtpResult" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse.
    ns3__SignResponse*                   ValidateOtpResult              0;	///< Optional element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest is a complexType.
///
/// class ns3__SignRequest operations:
/// - ns3__SignRequest* soap_new_ns3__SignRequest(soap*) allocate
/// - ns3__SignRequest* soap_new_ns3__SignRequest(soap*, int num) allocate array
/// - ns3__SignRequest* soap_new_req_ns3__SignRequest(soap*, ...) allocate, set required members
/// - ns3__SignRequest* soap_new_set_ns3__SignRequest(soap*, ...) allocate, set all public members
/// - ns3__SignRequest::soap_default(soap*) reset members to default
/// - int soap_read_ns3__SignRequest(soap*, ns3__SignRequest*) deserialize from a stream
/// - int soap_write_ns3__SignRequest(soap*, ns3__SignRequest*) serialize to a stream
/// - ns3__SignRequest* ns3__SignRequest::soap_dup(soap*) returns deep copy of ns3__SignRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__SignRequest::soap_del() deep deletes ns3__SignRequest data members, use only after ns3__SignRequest::soap_dup(NULL) (use soapcpp2 -Ed)
class ns3__SignRequest
{ public:
/// Element "ApplicationId" of XSD type xs:base64Binary.
    xsd__base64Binary*                   ApplicationId                  1;	///< Optional (xsi:nil when NULL) element.
/// Element "Hash" of XSD type xs:base64Binary.
    xsd__base64Binary*                   Hash                           1;	///< Optional (xsi:nil when NULL) element.
/// Element "Pin" of XSD type xs:base64Binary.
    xsd__base64Binary*                   Pin                            1;	///< Optional (xsi:nil when NULL) element.
/// Element "UserId" of XSD type xs:string.
    std::string*                         UserId                         1;	///< Optional (xsi:nil when NULL) element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus is a complexType.
///
/// class ns3__SignStatus operations:
/// - ns3__SignStatus* soap_new_ns3__SignStatus(soap*) allocate
/// - ns3__SignStatus* soap_new_ns3__SignStatus(soap*, int num) allocate array
/// - ns3__SignStatus* soap_new_req_ns3__SignStatus(soap*, ...) allocate, set required members
/// - ns3__SignStatus* soap_new_set_ns3__SignStatus(soap*, ...) allocate, set all public members
/// - ns3__SignStatus::soap_default(soap*) reset members to default
/// - int soap_read_ns3__SignStatus(soap*, ns3__SignStatus*) deserialize from a stream
/// - int soap_write_ns3__SignStatus(soap*, ns3__SignStatus*) serialize to a stream
/// - ns3__SignStatus* ns3__SignStatus::soap_dup(soap*) returns deep copy of ns3__SignStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__SignStatus::soap_del() deep deletes ns3__SignStatus data members, use only after ns3__SignStatus::soap_dup(NULL) (use soapcpp2 -Ed)
class ns3__SignStatus
{ public:
/// Element "Code" of XSD type xs:string.
    std::string*                         Code                           1;	///< Optional (xsi:nil when NULL) element.
/// Element "Field" of XSD type xs:string.
    std::string*                         Field                          1;	///< Optional (xsi:nil when NULL) element.
/// Element "FieldValue" of XSD type xs:string.
    std::string*                         FieldValue                     1;	///< Optional (xsi:nil when NULL) element.
/// Element "Message" of XSD type xs:string.
    std::string*                         Message                        1;	///< Optional (xsi:nil when NULL) element.
/// Element "ProcessId" of XSD type xs:string.
    std::string*                         ProcessId                      1;	///< Optional (xsi:nil when NULL) element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationRequest is a complexType.
///
/// class ns3__ValidationRequest operations:
/// - ns3__ValidationRequest* soap_new_ns3__ValidationRequest(soap*) allocate
/// - ns3__ValidationRequest* soap_new_ns3__ValidationRequest(soap*, int num) allocate array
/// - ns3__ValidationRequest* soap_new_req_ns3__ValidationRequest(soap*, ...) allocate, set required members
/// - ns3__ValidationRequest* soap_new_set_ns3__ValidationRequest(soap*, ...) allocate, set all public members
/// - ns3__ValidationRequest::soap_default(soap*) reset members to default
/// - int soap_read_ns3__ValidationRequest(soap*, ns3__ValidationRequest*) deserialize from a stream
/// - int soap_write_ns3__ValidationRequest(soap*, ns3__ValidationRequest*) serialize to a stream
/// - ns3__ValidationRequest* ns3__ValidationRequest::soap_dup(soap*) returns deep copy of ns3__ValidationRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__ValidationRequest::soap_del() deep deletes ns3__ValidationRequest data members, use only after ns3__ValidationRequest::soap_dup(NULL) (use soapcpp2 -Ed)
class ns3__ValidationRequest
{ public:
/// Element "Hash" of XSD type xs:base64Binary.
    xsd__base64Binary*                   Hash                           1;	///< Optional (xsi:nil when NULL) element.
/// Element "Signature" of XSD type xs:base64Binary.
    xsd__base64Binary*                   Signature                      1;	///< Optional (xsi:nil when NULL) element.
/// Element "X509Certificate" of XSD type xs:base64Binary.
    xsd__base64Binary*                   X509Certificate                1;	///< Optional (xsi:nil when NULL) element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationResponse is a complexType.
///
/// class ns3__ValidationResponse operations:
/// - ns3__ValidationResponse* soap_new_ns3__ValidationResponse(soap*) allocate
/// - ns3__ValidationResponse* soap_new_ns3__ValidationResponse(soap*, int num) allocate array
/// - ns3__ValidationResponse* soap_new_req_ns3__ValidationResponse(soap*, ...) allocate, set required members
/// - ns3__ValidationResponse* soap_new_set_ns3__ValidationResponse(soap*, ...) allocate, set all public members
/// - ns3__ValidationResponse::soap_default(soap*) reset members to default
/// - int soap_read_ns3__ValidationResponse(soap*, ns3__ValidationResponse*) deserialize from a stream
/// - int soap_write_ns3__ValidationResponse(soap*, ns3__ValidationResponse*) serialize to a stream
/// - ns3__ValidationResponse* ns3__ValidationResponse::soap_dup(soap*) returns deep copy of ns3__ValidationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__ValidationResponse::soap_del() deep deletes ns3__ValidationResponse data members, use only after ns3__ValidationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class ns3__ValidationResponse
{ public:
/// Element "Status" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns3__SignStatus*                     Status                         1;	///< Optional (xsi:nil when NULL) element.
/// Element "ValidationResult" of XSD type xs:boolean.
    bool*                                ValidationResult               1;	///< Optional (xsi:nil when NULL) element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse is a complexType.
///
/// class ns3__SignResponse operations:
/// - ns3__SignResponse* soap_new_ns3__SignResponse(soap*) allocate
/// - ns3__SignResponse* soap_new_ns3__SignResponse(soap*, int num) allocate array
/// - ns3__SignResponse* soap_new_req_ns3__SignResponse(soap*, ...) allocate, set required members
/// - ns3__SignResponse* soap_new_set_ns3__SignResponse(soap*, ...) allocate, set all public members
/// - ns3__SignResponse::soap_default(soap*) reset members to default
/// - int soap_read_ns3__SignResponse(soap*, ns3__SignResponse*) deserialize from a stream
/// - int soap_write_ns3__SignResponse(soap*, ns3__SignResponse*) serialize to a stream
/// - ns3__SignResponse* ns3__SignResponse::soap_dup(soap*) returns deep copy of ns3__SignResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__SignResponse::soap_del() deep deletes ns3__SignResponse data members, use only after ns3__SignResponse::soap_dup(NULL) (use soapcpp2 -Ed)
class ns3__SignResponse
{ public:
/// Element "Signature" of XSD type xs:base64Binary.
    xsd__base64Binary*                   Signature                      1;	///< Optional (xsi:nil when NULL) element.
/// Element "Status" of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
    ns3__SignStatus*                     Status                         1;	///< Optional (xsi:nil when NULL) element.
/// A handle to the soap struct context that manages this instance when instantiated by a context or NULL otherwise (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://Ama.Authentication.Service/Imports                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://Ama.Authentication.Service/                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignRequest.
typedef ns3__SignRequest _ns3__SignRequest;

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignStatus.
typedef ns3__SignStatus _ns3__SignStatus;

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationRequest of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationRequest.
typedef ns3__ValidationRequest _ns3__ValidationRequest;

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationResponse of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":ValidationResponse.
typedef ns3__ValidationResponse _ns3__ValidationResponse;

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse of XSD type "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature":SignResponse.
typedef ns3__SignResponse _ns3__SignResponse;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tempuri service name:	WSHttpBinding_USCORECCMovelSignature 
//gsoap tempuri service type:	CCMovelSignature 
//gsoap tempuri service port:	https://dev.cmd.autenticacao.gov.pt/Ama.Authentication.Service/CCMovelSignature.svc 
//gsoap tempuri service namespace:	http://tempuri.org/ 
//gsoap tempuri service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage CCMovelSignature Definitions

@section CCMovelSignature_bindings Service Bindings

  - @ref WSHttpBinding_USCORECCMovelSignature

@section CCMovelSignature_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page WSHttpBinding_USCORECCMovelSignature Binding "WSHttpBinding_USCORECCMovelSignature"

@section WSHttpBinding_USCORECCMovelSignature_operations Operations of Binding "WSHttpBinding_USCORECCMovelSignature"

  - @ref __tempuri__CCMovelSign

  - @ref __tempuri__CCMovelValidateSignature

  - @ref __tempuri__GetCertificate

  - @ref __tempuri__ValidateOtp

@section WSHttpBinding_USCORECCMovelSignature_ports Endpoints of Binding "WSHttpBinding_USCORECCMovelSignature"

  - https://dev.cmd.autenticacao.gov.pt/Ama.Authentication.Service/CCMovelSignature.svc

@section WSHttpBinding_USCORECCMovelSignature_policy Policy of Binding "WSHttpBinding_USCORECCMovelSignature"

See Section @ref WSHttpBinding_USCORECCMovelSignature_policy_enablers

  - WS-Policy applicable to the service endpoint ports:
	- Exactly one of the following:
		- All of the following:
			- [7.3] Transport Binding requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- Basic256
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Transport requirements:
					- [5.4.10] HTTPS required:
			- WS-Addressing is used

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Custom SOAP Header                                                         *
 *                                                                            *
\******************************************************************************/

#import "wsa.h"
struct SOAP_ENV__Header
{
   _wsa__MessageID    wsa__MessageID 0;
   _wsa__RelatesTo *  wsa__RelatesTo 0;
   _wsa__From *       wsa__From      0;
   _wsa__ReplyTo *    wsa__ReplyTo   0;
   _wsa__FaultTo *    wsa__FaultTo   0;
   _wsa__To           wsa__To        0;
   _wsa__Action       wsa__Action    0;
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   WSHttpBinding_USCORECCMovelSignature                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__CCMovelSign                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__CCMovelSign" of service binding "WSHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Action or location: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelSignResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__CCMovelSign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns2__CCMovelSign*                  ns2__CCMovelSign,
    // output parameters:
    _ns2__CCMovelSignResponse          &ns2__CCMovelSignResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__CCMovelSign(
    struct soap *soap,
    // input parameters:
    _ns2__CCMovelSign*                  ns2__CCMovelSign,
    // output parameters:
    _ns2__CCMovelSignResponse          &ns2__CCMovelSignResponse
  );
@endcode

C++ proxy class (defined in soapWSHttpBinding_USCORECCMovelSignatureProxy.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapWSHttpBinding_USCORECCMovelSignatureService.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	CCMovelSign SOAP
//gsoap tempuri service method-style:	CCMovelSign document
//gsoap tempuri service method-encoding:	CCMovelSign literal
//gsoap tempuri service method-input-action:	CCMovelSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelSign
//gsoap tempuri service method-output-action:	CCMovelSign http://Ama.Authentication.Service/CCMovelSignature/CCMovelSignResponse
int __tempuri__CCMovelSign(
    _ns2__CCMovelSign*                  ns2__CCMovelSign,	///< Input parameter
    _ns2__CCMovelSignResponse          &ns2__CCMovelSignResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__CCMovelValidateSignature                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__CCMovelValidateSignature" of service binding "WSHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Action or location: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelValidateSignature"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelValidateSignature"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/CCMovelValidateSignatureResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__CCMovelValidateSignature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns2__CCMovelValidateSignature*     ns2__CCMovelValidateSignature,
    // output parameters:
    _ns2__CCMovelValidateSignatureResponse&ns2__CCMovelValidateSignatureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__CCMovelValidateSignature(
    struct soap *soap,
    // input parameters:
    _ns2__CCMovelValidateSignature*     ns2__CCMovelValidateSignature,
    // output parameters:
    _ns2__CCMovelValidateSignatureResponse&ns2__CCMovelValidateSignatureResponse
  );
@endcode

C++ proxy class (defined in soapWSHttpBinding_USCORECCMovelSignatureProxy.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapWSHttpBinding_USCORECCMovelSignatureService.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	CCMovelValidateSignature SOAP
//gsoap tempuri service method-style:	CCMovelValidateSignature document
//gsoap tempuri service method-encoding:	CCMovelValidateSignature literal
//gsoap tempuri service method-input-action:	CCMovelValidateSignature http://Ama.Authentication.Service/CCMovelSignature/CCMovelValidateSignature
//gsoap tempuri service method-output-action:	CCMovelValidateSignature http://Ama.Authentication.Service/CCMovelSignature/CCMovelValidateSignatureResponse
int __tempuri__CCMovelValidateSignature(
    _ns2__CCMovelValidateSignature*     ns2__CCMovelValidateSignature,	///< Input parameter
    _ns2__CCMovelValidateSignatureResponse&ns2__CCMovelValidateSignatureResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__GetCertificate                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__GetCertificate" of service binding "WSHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Action or location: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificate"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificate"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/GetCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__GetCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns2__GetCertificate*               ns2__GetCertificate,
    // output parameters:
    _ns2__GetCertificateResponse       &ns2__GetCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__GetCertificate(
    struct soap *soap,
    // input parameters:
    _ns2__GetCertificate*               ns2__GetCertificate,
    // output parameters:
    _ns2__GetCertificateResponse       &ns2__GetCertificateResponse
  );
@endcode

C++ proxy class (defined in soapWSHttpBinding_USCORECCMovelSignatureProxy.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapWSHttpBinding_USCORECCMovelSignatureService.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	GetCertificate SOAP
//gsoap tempuri service method-style:	GetCertificate document
//gsoap tempuri service method-encoding:	GetCertificate literal
//gsoap tempuri service method-input-action:	GetCertificate http://Ama.Authentication.Service/CCMovelSignature/GetCertificate
//gsoap tempuri service method-output-action:	GetCertificate http://Ama.Authentication.Service/CCMovelSignature/GetCertificateResponse
int __tempuri__GetCertificate(
    _ns2__GetCertificate*               ns2__GetCertificate,	///< Input parameter
    _ns2__GetCertificateResponse       &ns2__GetCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__ValidateOtp                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__ValidateOtp" of service binding "WSHttpBinding_USCORECCMovelSignature".

  - SOAP document/literal style messaging

  - Action or location: "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp"

  - Addressing input action: "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp"

  - Addressing output action: "http://Ama.Authentication.Service/CCMovelSignature/ValidateOtpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__ValidateOtp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns2__ValidateOtp*                  ns2__ValidateOtp,
    // output parameters:
    _ns2__ValidateOtpResponse          &ns2__ValidateOtpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__ValidateOtp(
    struct soap *soap,
    // input parameters:
    _ns2__ValidateOtp*                  ns2__ValidateOtp,
    // output parameters:
    _ns2__ValidateOtpResponse          &ns2__ValidateOtpResponse
  );
@endcode

C++ proxy class (defined in soapWSHttpBinding_USCORECCMovelSignatureProxy.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapWSHttpBinding_USCORECCMovelSignatureService.h):
@code
  class WSHttpBinding_USCORECCMovelSignatureService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	ValidateOtp SOAP
//gsoap tempuri service method-style:	ValidateOtp document
//gsoap tempuri service method-encoding:	ValidateOtp literal
//gsoap tempuri service method-input-action:	ValidateOtp http://Ama.Authentication.Service/CCMovelSignature/ValidateOtp
//gsoap tempuri service method-output-action:	ValidateOtp http://Ama.Authentication.Service/CCMovelSignature/ValidateOtpResponse
int __tempuri__ValidateOtp(
    _ns2__ValidateOtp*                  ns2__ValidateOtp,	///< Input parameter
    _ns2__ValidateOtpResponse          &ns2__ValidateOtpResponse	///< Output parameter
);

/**

@page WSHttpBinding_USCORECCMovelSignature Binding "WSHttpBinding_USCORECCMovelSignature"

@section WSHttpBinding_USCORECCMovelSignature_policy_enablers Policy Enablers of Binding "WSHttpBinding_USCORECCMovelSignature"

Based on policies and protocol requirements, this service requires importing "wsse.h" "wsa5.h"

  - WS-Policy reminders and enablers (when applicable):
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Discovery 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Discovery 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsddapi.h" // See the user guide gsoap/doc/wsdd/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/

#import "wsse.h"
/*#import "wsa5.h" */

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://Ama.Authentication.Service/Imports"

@section ns2 Top-level root elements of schema "http://Ama.Authentication.Service/"

  - <ns2:CCMovelSign> @ref _ns2__CCMovelSign
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__CCMovelSign(struct soap*, _ns2__CCMovelSign*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__CCMovelSign(struct soap*, _ns2__CCMovelSign*);
    @endcode

  - <ns2:CCMovelSignResponse> @ref _ns2__CCMovelSignResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__CCMovelSignResponse(struct soap*, _ns2__CCMovelSignResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__CCMovelSignResponse(struct soap*, _ns2__CCMovelSignResponse*);
    @endcode

  - <ns2:CCMovelValidateSignature> @ref _ns2__CCMovelValidateSignature
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__CCMovelValidateSignature(struct soap*, _ns2__CCMovelValidateSignature*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__CCMovelValidateSignature(struct soap*, _ns2__CCMovelValidateSignature*);
    @endcode

  - <ns2:CCMovelValidateSignatureResponse> @ref _ns2__CCMovelValidateSignatureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__CCMovelValidateSignatureResponse(struct soap*, _ns2__CCMovelValidateSignatureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__CCMovelValidateSignatureResponse(struct soap*, _ns2__CCMovelValidateSignatureResponse*);
    @endcode

  - <ns2:GetCertificate> @ref _ns2__GetCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetCertificate(struct soap*, _ns2__GetCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetCertificate(struct soap*, _ns2__GetCertificate*);
    @endcode

  - <ns2:GetCertificateResponse> @ref _ns2__GetCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__GetCertificateResponse(struct soap*, _ns2__GetCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__GetCertificateResponse(struct soap*, _ns2__GetCertificateResponse*);
    @endcode

  - <ns2:ValidateOtp> @ref _ns2__ValidateOtp
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__ValidateOtp(struct soap*, _ns2__ValidateOtp*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__ValidateOtp(struct soap*, _ns2__ValidateOtp*);
    @endcode

  - <ns2:ValidateOtpResponse> @ref _ns2__ValidateOtpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__ValidateOtpResponse(struct soap*, _ns2__ValidateOtpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__ValidateOtpResponse(struct soap*, _ns2__ValidateOtpResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://schemas.datacontract.org/2004/07/Ama.Structures.CCMovelSignature"

  - <ns3:SignRequest> @ref _ns3__SignRequest
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__SignRequest(struct soap*, _ns3__SignRequest*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__SignRequest(struct soap*, _ns3__SignRequest*);
    @endcode

  - <ns3:SignStatus> @ref _ns3__SignStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__SignStatus(struct soap*, _ns3__SignStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__SignStatus(struct soap*, _ns3__SignStatus*);
    @endcode

  - <ns3:ValidationRequest> @ref _ns3__ValidationRequest
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ValidationRequest(struct soap*, _ns3__ValidationRequest*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ValidationRequest(struct soap*, _ns3__ValidationRequest*);
    @endcode

  - <ns3:ValidationResponse> @ref _ns3__ValidationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ValidationResponse(struct soap*, _ns3__ValidationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ValidationResponse(struct soap*, _ns3__ValidationResponse*);
    @endcode

  - <ns3:SignResponse> @ref _ns3__SignResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__SignResponse(struct soap*, _ns3__SignResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__SignResponse(struct soap*, _ns3__SignResponse*);
    @endcode

*/

/* End of CCMovelSignature.h */
